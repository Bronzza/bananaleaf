// Adaptive values
$maxWidthContainer: 1280;
$maxWidth: 1920;

@mixin adaptive-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if $type == 1 {
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    } @else if $type == 2 {
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    } @else {
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
}

// Media queries
@mixin respond-to($breakpoint) {
    @if $breakpoint == mobile {
        @media (max-width: $breakpoint-mobile) { @content; }
    }
    @else if $breakpoint == tablet {
        @media (max-width: $breakpoint-tablet) { @content; }
    }
    @else if $breakpoint == desktop {
        @media (max-width: $breakpoint-desktop) { @content; }
    }
    @else if $breakpoint == large {
        @media (max-width: $breakpoint-large) { @content; }
    }
}

// Flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    flex-wrap: $wrap;
}

// Grid
@mixin grid($columns: 1, $gap: 0) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

// Transitions
@mixin transition($property: all, $duration: $transition-normal, $timing: ease) {
    transition: $property $duration $timing;
}

// Buttons
@mixin button($bg-color: $color-primary, $text-color: white, $padding: $spacing-sm $spacing-md) {
    background-color: $bg-color;
    color: $text-color;
    padding: $padding;
    border-radius: 4px;
    @include transition;
    
    &:hover {
        opacity: 0.9;
    }
}

// Container
@mixin container {
    max-width: #{$maxWidthContainer}px;
    margin: 0 auto;
    padding: 0 $spacing-md;
    
    @include respond-to(tablet) {
        padding: 0 $spacing-sm;
    }
} 